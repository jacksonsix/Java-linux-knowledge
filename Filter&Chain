http://www.oracle.com/technetwork/java/filters-137243.html

Servlet filters are implementation of the chain of responsibility pattern

The point is that each filter stays "in front" and "behind" each servlet it is mapped to. 
So if you have a filter around a servlet, you'll have:

void doFilter(..) { 
    // do stuff before servlet gets called

    // invoke the servlet, or any other filters mapped to the target servlet
    chain.doFilter(..);

    // do stuff after the servlet finishes
}
You also have the option not to call chain.doFilter(..) in which case the servlet will never be called. 
This is useful for security purposes - for example you can check whether there's a user logged-in.


----------------------------------------------------
Servlet Filter is used for monitoring request and response from client to the servlet, or to modify the request and response, 
or to audit and log.

Servlet Listener is used for listening to events in a web containers, such as when you create a session,
or place an attribute in an session or if you passivate and activate in another container,
to subscribe to these events you can configure listener in web.xml, for example HttpSessionListener.
